group 'xyz.jadonfowler'
version '0.0.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

apply plugin: 'kotlin'
apply plugin: "antlr"
apply plugin: "application"
apply plugin: 'org.junit.platform.gradle.plugin'

mainClassName = "f2.MainKt"

repositories {
    mavenCentral()
}

// https://github.com/bytedeco/javacpp-presets/wiki/Issues-with-Build-Tools#gradle
configurations {
    all*.exclude group: "org.bytedeco", module: "javacpp-presets"
}

dependencies {
    antlr "org.antlr:antlr4:4.5" // use ANTLR version 4
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    compile "org.bytedeco:javacpp:1.3"
    compile "org.bytedeco.javacpp-presets:llvm:3.9.0-1.3"
    compile "org.bytedeco.javacpp-presets:llvm:3.9.0-1.3:linux-x86_64"

    testRuntime "org.junit.platform:junit-platform-launcher:1.0.2"
    testRuntime "org.junit.vintage:junit-vintage-engine:4.12.2"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.2"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-package", "f2.parser"]
    // Output generated sources from ANTLR into xyz.jadonfowler.compiler.parser
    outputDirectory = new File("src/main/java/f2/parser/".toString())
}

compileKotlin.dependsOn generateGrammarSource

junitPlatform {
    enableStandardTestTask true
}
